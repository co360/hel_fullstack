{"ast":null,"code":"var _jsxFileName = \"/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/Authors.js\";\n\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { EDIT_AUTHOR } from '../queries';\nimport { ALL_AUTHORS } from '../queries';\n\nconst Authors = ({\n  show,\n  authors\n}) => {\n  const [name, setName] = useState('');\n  const [born, setBorn] = useState('');\n  const [editAuthor] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n  console.log('frontin authit data', name);\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log('working', name);\n    editAuthor({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName('');\n    setBorn('');\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"born\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"books\")), console.log('frontin authorit', authors), authors.allAuthors.map(a => React.createElement(\"tr\", {\n    key: a.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, a.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, a.born), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, a.bookCount))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Set birthyear\"), React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, authors.allAuthors.map(a => React.createElement(\"option\", {\n    value: a.name,\n    key: a.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, a.name)), console.log()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Born\", React.createElement(\"input\", {\n    type: \"number\",\n    value: born,\n    onChange: ({\n      target\n    }) => setBorn(parseInt(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"update author\"))));\n};\n\nexport default Authors;","map":{"version":3,"sources":["/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/Authors.js"],"names":["React","useState","useEffect","useMutation","useQuery","EDIT_AUTHOR","ALL_AUTHORS","Authors","show","authors","name","setName","born","setBorn","editAuthor","refetchQueries","query","console","log","submit","event","preventDefault","variables","allAuthors","map","a","bookCount","target","value","id","parseInt"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n  \nimport React, { useState, useEffect } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { EDIT_AUTHOR } from '../queries'\nimport { ALL_AUTHORS } from '../queries'\n\nconst Authors = ( { show, authors } ) => {\n  \n  const [name, setName] = useState('')\n  const [born, setBorn] = useState('')\n  const [ editAuthor ] = useMutation(EDIT_AUTHOR, {\n    refetchQueries: [ { query: ALL_AUTHORS } ]\n  })\n\n\n  console.log('frontin authit data', name)\n  \n  const submit = async (event) => {\n    event.preventDefault()\n    console.log('working', name)\n    editAuthor({  variables: { name, born } })\n\n    setName('')\n    setBorn('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n\n\n  return (\n    <div>\n      <h2>authors</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              born\n            </th>\n            <th>\n              books\n            </th>\n          </tr>\n          {console.log('frontin authorit', authors)}\n          {authors.allAuthors.map(a =>\n            <tr key={a.name}>\n              <td>{a.name}</td>\n              <td>{a.born}</td>\n              <td>{a.bookCount}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n\n      <div>\n      <h3>Set birthyear</h3>\n        <form onSubmit={submit} >\n            <select value={name} onChange={({target}) => setName(target.value)} >\n            {authors.allAuthors.map(a => \n            <option value={a.name} key={a.id}>{a.name}</option>\n            )}\n            {console.log()}\n            </select>\n              <div>\n              Born\n            <input\n              type='number'\n              value={born}\n              onChange={({ target }) => setBorn(parseInt(target.value))} \n              />\n              </div>\n              <button type='submit'>update author</button>\n        </form>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Authors\n"]},"metadata":{},"sourceType":"module"}