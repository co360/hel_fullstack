{"ast":null,"code":"var _jsxFileName = \"/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/NewBook.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_BOOK, ALL_BOOKS, ALL_AUTHORS } from '../queries';\n\nconst NewBook = ({\n  newBook,\n  show\n}) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuhtor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(ADD_BOOK, {\n    update: (store, response) => {\n      const booksInStore = store.readQuery({\n        query: ALL_BOOKS\n      });\n      console.log('tyyppi', Array.from(booksInStore));\n      console.log('push data', response.data);\n      booksInStore.allBooks.push(response.data.addBook);\n      store.writeQuery({\n        query: ALL_BOOKS,\n        data: booksInStore\n      });\n    }\n  });\n\n  if (!show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    createBook({\n      variables: {\n        title,\n        author,\n        published,\n        genres\n      }\n    });\n    setTitle('');\n    setPublished('');\n    setAuhtor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuhtor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"published\", React.createElement(\"input\", {\n    type: \"number\",\n    value: published,\n    onChange: ({\n      target\n    }) => setPublished(parseInt(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: genre,\n    onChange: ({\n      target\n    }) => setGenre(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addGenre,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"add genre\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"genres: \", genres.join(' ')), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"create book\")));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/NewBook.js"],"names":["React","useState","useMutation","ADD_BOOK","ALL_BOOKS","ALL_AUTHORS","NewBook","newBook","show","title","setTitle","author","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","createBook","update","store","response","booksInStore","readQuery","query","console","log","Array","from","data","allBooks","push","addBook","writeQuery","submit","event","preventDefault","variables","addGenre","concat","target","value","parseInt","join"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { ADD_BOOK, ALL_BOOKS, ALL_AUTHORS } from '../queries'\n\nconst NewBook = ( { newBook, show } ) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuhtor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n  const [ createBook ] = useMutation(ADD_BOOK, {\n    update: (store, response) => {\n      const booksInStore = store.readQuery({ query: ALL_BOOKS })\n      console.log('tyyppi', Array.from(booksInStore))\n      console.log('push data', response.data)\n      booksInStore.allBooks.push(response.data.addBook)\n      store.writeQuery({\n        query: ALL_BOOKS,\n        data: booksInStore\n      })\n    }\n  })\n\n  if (!show) {\n    return null\n  }\n\n\n  const submit = async (event) => {\n    event.preventDefault()\n    \n    createBook({  variables: { title, author, published, genres } })\n\n\n    setTitle('')\n    setPublished('')\n    setAuhtor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuhtor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type='number'\n            value={published}\n            onChange={({ target }) => setPublished(parseInt(target.value))}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">add genre</button>\n        </div>\n        <div>\n          genres: {genres.join(' ')}\n        </div>\n        <button type='submit'>create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook"]},"metadata":{},"sourceType":"module"}