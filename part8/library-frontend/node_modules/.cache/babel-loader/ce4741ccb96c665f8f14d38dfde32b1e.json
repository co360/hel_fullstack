{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n      id\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query {\n      allBooks {\n          title\n          author {\n            name\n          }\n          published\n          genres\n      }\n\n  }\n`;\nexport const CREATE_BOOK = gql`\n  mutation createBook($title: String!, $published: Int!, $author: Author!,  $genres: [String!]!) {\n    addBook(\n      title: $title,\n      published: $published,\n      author: $author,\n      genres: $genres\n    ) {\n      title\n      published\n      author {\n        name\n        born\n      }      \n      genres\n    }\n  }\n`;\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born)  {\n      name\n      born\n      bookCount\n      id\n  }\n}\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`;\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $favouriteGenre: String) {\n    createUser(username: $username, favouriteGenre: $favoriteGenre) {\n      username\n      favouriteGenre\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/queries.js"],"names":["gql","ALL_AUTHORS","ALL_BOOKS","CREATE_BOOK","EDIT_AUTHOR","LOGIN","CREATE_USER"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;CAAxB;AAWP,OAAO,MAAME,SAAS,GAAGF,GAAI;;;;;;;;;;;;CAAtB;AAcP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;;;;;;;;;;;CAAxB;AAmBP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;;;;;;;;;CAAxB;AAWP,OAAO,MAAMK,KAAK,GAAGL,GAAI;;;;;;CAAlB;AAQP,OAAO,MAAMM,WAAW,GAAGN,GAAI;;;;;;;CAAxB","sourcesContent":["import { gql } from '@apollo/client'\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n      id\n    }\n  }\n`\n\nexport const ALL_BOOKS = gql`\n  query {\n      allBooks {\n          title\n          author {\n            name\n          }\n          published\n          genres\n      }\n\n  }\n`\n\nexport const CREATE_BOOK = gql`\n  mutation createBook($title: String!, $published: Int!, $author: Author!,  $genres: [String!]!) {\n    addBook(\n      title: $title,\n      published: $published,\n      author: $author,\n      genres: $genres\n    ) {\n      title\n      published\n      author {\n        name\n        born\n      }      \n      genres\n    }\n  }\n`\n\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born)  {\n      name\n      born\n      bookCount\n      id\n  }\n}\n`\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`\n\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $favouriteGenre: String) {\n    createUser(username: $username, favouriteGenre: $favoriteGenre) {\n      username\n      favouriteGenre\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}