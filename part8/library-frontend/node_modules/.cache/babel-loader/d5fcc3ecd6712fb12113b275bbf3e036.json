{"ast":null,"code":"var _jsxFileName = \"/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/Books.js\";\nimport React from 'react';\nimport { useSubscription } from '@apollo/client';\nimport { BOOK_ADDED, ALL_BOOKS } from '../queries';\n\nconst Books = ({\n  show,\n  books\n}) => {\n  console.log('books', books);\n  const book = books.allBooks;\n  console.log('books data', book);\n\n  const updateCacheWith = addedPerson => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n\n    const dataInStore = client.readQuery({\n      query: ALL_PERSONS\n    });\n\n    if (!includedIn(dataInStore.allPersons, addedPerson)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: {\n          allPersons: dataInStore.allPersons.concat(addedPerson)\n        }\n      });\n    }\n  };\n\n  useSubscription(PERSON_ADDED, {\n    onSubscriptionData: ({\n      subscriptionData\n    }) => {\n      const addedPerson = subscriptionData.data.addBook;\n      window.alert(`${addedPerson.name} added`);\n      updateCacheWith(addedPerson);\n    }\n  });\n\n  if (!show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"published\")), book.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, a.published))))));\n};\n\nexport default Books;","map":{"version":3,"sources":["/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/components/Books.js"],"names":["React","useSubscription","BOOK_ADDED","ALL_BOOKS","Books","show","books","console","log","book","allBooks","updateCacheWith","addedPerson","includedIn","set","object","map","p","id","includes","dataInStore","client","readQuery","query","ALL_PERSONS","allPersons","writeQuery","data","concat","PERSON_ADDED","onSubscriptionData","subscriptionData","addBook","window","alert","name","a","title","author","published"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,YAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAF,KAAuB;AAEnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,QAAMG,IAAI,GAAGH,KAAK,CAACI,QAAnB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,IAA1B;;AAEA,QAAME,eAAe,GAAIC,WAAD,IAAiB;AACvC,UAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,MAAN,KACjBD,GAAG,CAACE,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,EAAf,EAAmBC,QAAnB,CAA4BJ,MAAM,CAACG,EAAnC,CADF;;AAGA,UAAME,WAAW,GAAGC,MAAM,CAACC,SAAP,CAAiB;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAAjB,CAApB;;AACA,QAAI,CAACX,UAAU,CAACO,WAAW,CAACK,UAAb,EAAyBb,WAAzB,CAAf,EAAsD;AACpDS,MAAAA,MAAM,CAACK,UAAP,CAAkB;AAChBH,QAAAA,KAAK,EAAEpB,SADS;AAEhBwB,QAAAA,IAAI,EAAE;AAAEF,UAAAA,UAAU,EAAGL,WAAW,CAACK,UAAZ,CAAuBG,MAAvB,CAA8BhB,WAA9B;AAAf;AAFU,OAAlB;AAID;AACF,GAXD;;AAaAX,EAAAA,eAAe,CAAC4B,YAAD,EAAe;AAC5BC,IAAAA,kBAAkB,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA0B;AAC5C,YAAMnB,WAAW,GAAGmB,gBAAgB,CAACJ,IAAjB,CAAsBK,OAA1C;AACAC,MAAAA,MAAM,CAACC,KAAP,CAAc,GAAEtB,WAAW,CAACuB,IAAK,QAAjC;AACAxB,MAAAA,eAAe,CAACC,WAAD,CAAf;AACD;AAL2B,GAAf,CAAf;;AAQA,MAAI,CAACP,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGI,IAAI,CAACO,GAAL,CAASoB,CAAC,IACT;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASH,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,CAAC,CAACG,SAAP,CAHF,CADD,CAVH,CADF,CAHF,CADF;AA0BD,CAzDD;;AA2DA,eAAenC,KAAf","sourcesContent":["import React from 'react'\nimport { useSubscription } from '@apollo/client'\nimport { BOOK_ADDED, ALL_BOOKS } from '../queries'\n\nconst Books = ( { show, books } ) => {\n\n  console.log('books', books)\n  const book = books.allBooks\n  console.log('books data', book)\n\n  const updateCacheWith = (addedPerson) => {\n    const includedIn = (set, object) => \n      set.map(p => p.id).includes(object.id)  \n\n    const dataInStore = client.readQuery({ query: ALL_PERSONS })\n    if (!includedIn(dataInStore.allPersons, addedPerson)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: { allPersons : dataInStore.allPersons.concat(addedPerson) }\n      })\n    }   \n  }\n\n  useSubscription(PERSON_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedPerson = subscriptionData.data.addBook\n      window.alert(`${addedPerson.name} added`)\n      updateCacheWith(addedPerson)\n    }\n  })\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div>\n      <h2>books</h2>\n\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {book.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}