{"ast":null,"code":"import { gql } from '@apollo/client';\nimport { createSourceEventStream } from 'graphql';\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n      id\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query {\n      allBooks {\n          title\n          author {\n            name\n          }\n          published\n      }\n  }\n`;\nexport const CREATE_BOOK = gql`\n  mutation createBook($title: String!, $published: Int!, $author: String!,  $genres: [String!]!) {\n    addBook(\n      title: $title,\n      published: $published,\n      author: $author,\n      genres: $genres\n    ) {\n      title\n      published\n      author{\n        name\n        born\n      }      \n      genres\n    }\n  }\n`;\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born)  {\n      name\n      born\n      bookCount\n      id\n  }\n}\n`;\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $favoriteGenre: String) {\n    createUser(username: $username, favoritegenre: $favoriteGenre) {\n      username\n      favoritegenre\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/jaakkogummerus/Desktop/hel-fullstack/part8/library-frontend/src/queries.js"],"names":["gql","createSourceEventStream","ALL_AUTHORS","ALL_BOOKS","CREATE_BOOK","EDIT_AUTHOR","CREATE_USER"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,uBAAT,QAAwC,SAAxC;AAEA,OAAO,MAAMC,WAAW,GAAGF,GAAI;;;;;;;;;CAAxB;AAWP,OAAO,MAAMG,SAAS,GAAGH,GAAI;;;;;;;;;;CAAtB;AAYP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;;;;;;;;;;;;;;;;;CAAxB;AAmBP,OAAO,MAAMK,WAAW,GAAGL,GAAI;;;;;;;;;CAAxB;AAYP,OAAO,MAAMM,WAAW,GAAGN,GAAI;;;;;;;CAAxB","sourcesContent":["import { gql } from '@apollo/client'\nimport { createSourceEventStream } from 'graphql'\n\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors  {\n      name\n      born\n      bookCount\n      id\n    }\n  }\n`\n\nexport const ALL_BOOKS = gql`\n  query {\n      allBooks {\n          title\n          author {\n            name\n          }\n          published\n      }\n  }\n`\n\nexport const CREATE_BOOK = gql`\n  mutation createBook($title: String!, $published: Int!, $author: String!,  $genres: [String!]!) {\n    addBook(\n      title: $title,\n      published: $published,\n      author: $author,\n      genres: $genres\n    ) {\n      title\n      published\n      author{\n        name\n        born\n      }      \n      genres\n    }\n  }\n`\n\nexport const EDIT_AUTHOR = gql`\n  mutation editAuthor($name: String!, $born: Int!) {\n    editAuthor(name: $name, setBornTo: $born)  {\n      name\n      born\n      bookCount\n      id\n  }\n}\n`\n\n\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $favoriteGenre: String) {\n    createUser(username: $username, favoritegenre: $favoriteGenre) {\n      username\n      favoritegenre\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}