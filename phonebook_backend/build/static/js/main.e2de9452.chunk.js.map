{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","put","Name","person","deletePerson","name","number","type","onClick","Filter","handleFilter","searchPerson","placeholder","value","onChange","Persons","searchResults","map","i","key","PersonForm","submitForm","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchPerson","setSearchResults","errorMessage","setErrorMessage","useEffect","personService","then","response","console","log","data","Notification","message","className","React","results","filter","toLowerCase","includes","event","target","preventDefault","numbers","some","x","window","confirm","personToChange","find","setTimeout","newPerson","concat","catch","error","erasingPerson","n","alert","location","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2de9452.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl)\n\nconst create = (newObject) => axios.post(baseUrl, newObject)\n\nconst erase = (id) => axios.delete(`${baseUrl}/${id}`)\n\nconst replace = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject)\n\nexport default {\n  getAll, create, erase, replace,\n}\n","/* eslint-disable no-undef */\n/* eslint-disable no-alert */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/personService'\n\nconst Name = ({ person, deletePerson }) => (\n  <p>\n    {person.name}\n    {' '}\n    {person.number}\n    {' '}\n    <button type=\"submit\" onClick={deletePerson}>delete</button>\n  </p>\n)\n\nconst Filter = ({ handleFilter, searchPerson }) => (\n  <div>\n    <form>\n      <div>\n        Search for person:\n        <input\n          placeholder=\"Search\"\n          value={searchPerson}\n          onChange={handleFilter}\n        />\n      </div>\n    </form>\n  </div>\n)\n\nconst Persons = ({ searchResults, deletePerson }) => (\n  <div>\n    {searchResults.map((person, i) => <Name key={i} person={person} deletePerson={() => deletePerson(person.id)} />)}\n  </div>\n)\n\nconst PersonForm = ({\n  submitForm, newName, handleNameChange, newNumber, handleNumberChange,\n}) => (\n  <div>\n    <form onSubmit={submitForm}>\n      <div>\n        Name:\n        {' '}\n        <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n        <br />\n        Number:\n        {' '}\n        <input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n        <br />\n        <button type=\"submit\">Add</button>\n      </div>\n      <div />\n    </form>\n  </div>\n)\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchPerson, setSearchPerson] = useState('')\n  const [searchResults, setSearchResults] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => {\n        console.log('useEffect', response)\n        setPersons(response.data)\n      })\n  }, [])\n\n  const submitForm = (event) => {\n    event.preventDefault()\n    personService\n      .getAll()\n      .then((response) => {\n        const numbers = [...response.data]\n        console.log('here is person data', numbers)\n        if (numbers.some((x) => x.name === newName)) {\n          if (window.confirm(`${newName} is already added to phonebook. Want to replace old number with new one?`)) {\n            const personToChange = numbers.find((name) => name.name === newName).id\n            const newPhone = {\n              name: newName,\n              number: newNumber,\n            }\n            personService\n              .replace(personToChange, newPhone)\n              .then(() => {\n                setNewName('')\n                setNewNumber('')\n                personService\n                  .getAll()\n                  .then(() => {\n                    setPersons(persons)\n                  })\n                setErrorMessage(`${newName}Â´s number was changed.`)\n                setTimeout(() => {\n                  setErrorMessage(null)\n                }, 3000)\n              })\n          }\n        } else {\n          const newPerson = {\n            name: newName,\n            number: newNumber,\n          }\n          personService\n            .create(newPerson)\n            .then(() => {\n              setNewName('')\n              setNewNumber('')\n              setPersons(numbers.concat(newPerson))\n            })\n            .catch((error) => {\n              console.log(error.response.data)\n              setErrorMessage(`${error.response.data.error}`)\n            })\n          setErrorMessage(`${newPerson.name} was added to phonebook.`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        }\n      })\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n\n  const deletePerson = (id) => {\n    const erasingPerson = persons.find((n) => n.id === id)\n    alert(`Deleting ${erasingPerson.name}`, window.location.href = '')\n    personService\n      .erase(id)\n      .then((response) => {\n        setPersons(persons.filter((person) => person.id !== response))\n      })\n\n    setErrorMessage(`${erasingPerson.name} was deleted`)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 3000)\n  }\n\n\n  React.useEffect(() => {\n    const results = persons.filter(\n      (person) => person.name.toLowerCase().includes(searchPerson),\n    )\n    setSearchResults(results)\n  }, [persons, searchPerson])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    console.log(handleFilter)\n    setSearchPerson(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} />\n      <Filter handleFilter={handleFilter} searchPerson={searchPerson} />\n      <h3>Add new person</h3>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        submitForm={submitForm}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchResults={searchResults} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}